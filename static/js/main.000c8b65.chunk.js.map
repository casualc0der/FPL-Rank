{"version":3,"sources":["Charty.js","Chips.js","index.js"],"names":["Charty","props","chartReference","React","createRef","data","this","width","height","options","maintainAspectRatio","scales","yAxes","display","ticks","min","max","beginAtZero","Component","Chips","id","Table","size","striped","map","e","key","toUpperCase","a","url","fetch","response","json","Home","state","current","rank","chips","setState","target","value","x","weekArray","event","rankArray","overall_rank","chipArray","name","placeholder","onChange","handleChange","onClick","getData","then","updateStats","labels","datasets","label","borderColor","ReactDOM","render","document","getElementById"],"mappings":"sNAkDeA,E,YA5Cb,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KACDC,eAAiBC,IAAMC,YAFZ,E,mHAYpB,OAEK,kBAAC,IAAD,CACAC,KAAMC,KAAKL,MAAMI,KACjBE,MAAO,IACPC,OAAU,GACVC,QAAS,CAEPC,qBAAqB,EACrBC,OAAQ,CACDC,MAAO,CAAC,CACNC,SAAS,EACTC,MAAO,CACLC,IAAK,EACLC,KAAM,QACNC,aAAa,a,GA7BVC,a,QC+CNC,E,iLA3CX,OAAuB,OAApBb,KAAKL,MAAMI,KACL,KAKP,yBAAKe,GAAG,SACR,kBAACC,EAAA,EAAD,CAAOC,KAAK,KAAKC,QAAQ,QACzB,+BACA,4BACA,oCACA,sCAGJ,+BACQjB,KAAKL,MAAMI,KAAKmB,KAAI,SAAAC,GAEpB,OACE,wBAAIC,IAAKD,GACT,0CAASA,EAAE,GAAGE,eAAd,KACA,sCAAQF,EAAE,gB,GAxBFP,a,mDCGpB,WAAuBE,GAAvB,mBAAAQ,EAAA,4DAGY,uCACRC,EAJJ,sDAIyDT,EAJzD,sBAKqBU,MAFT,uCAEqBD,GALjC,cAKIE,EALJ,gBAMiBA,EAASC,OAN1B,cAMI3B,EANJ,yBAQOA,GARP,4C,0BAkBM4B,E,YACN,WAAYhC,GAAQ,IAAD,8BACjB,4CAAMA,KACDiC,MAAO,CAEVd,GAAI,GACJe,QAAS,GACTC,KAAM,GACNC,MAAO,IAPQ,E,0EAeNZ,GACXnB,KAAKgC,SAAS,CAEZlB,GAAIK,EAAEc,OAAOC,U,kCAILC,GAEV,IAAIC,EAAYD,EAAEN,QAAQX,KAAI,SAAAC,GAAC,OAAIA,EAAEkB,SACjCC,EAAYH,EAAEN,QAAQX,KAAI,SAAAC,GAAC,OAAIA,EAAEoB,aAAepB,EAAEoB,aAAcpB,EAAEoB,gBAClEC,EAAYL,EAAEJ,MAAMb,KAAI,SAAAC,GAE1B,MAAO,CAACA,EAAEkB,MAAOlB,EAAEsB,SAUrBzC,KAAKgC,SAAS,CAIZH,QAASO,EACTN,KAAMQ,EACNP,MAAOS,M,+BAKC,IAAD,OACP,OAEE,6BACA,yCACA,2BAAOE,YAAY,UAAUR,MAAOlC,KAAK4B,MAAMd,GAAI6B,SAAU,SAACxB,GAAD,OAAO,EAAKyB,aAAazB,MACtF,4BAAQ0B,QAAU,kB,2CAAMC,CAAQ,EAAKlB,MAAMd,IAClBiC,MAAK,SAAAZ,GACJ,EAAKa,YAAYb,QAF3C,UAUA,kBAAC,EAAD,CAAQpC,KAAQ,CACVkD,OAAQjD,KAAK4B,MAAMC,QACnBqB,SAAU,CAAC,CACXC,MAAO,eACPC,YAAa,OACbrD,KAAMC,KAAK4B,MAAME,UAErB,kBAAC,EAAD,CAAO/B,KAAOC,KAAK4B,MAAMG,a,GAzEdnB,aAkFnByC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.000c8b65.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Line} from 'react-chartjs-2';\n\n\nclass Charty extends Component {\n\n  constructor(props){\n    super(props);\n    this.chartReference = React.createRef();\n  }\n\n  componentDidMount() {\n    \n  }\n\n\nrender() {\n\nreturn (\n\n     <Line \n     data={this.props.data}\n     width={100}\n     height = {50}\n     options={{\n       \n       maintainAspectRatio: true,\n       scales: {\n              yAxes: [{\n                display: true,\n                ticks: {\n                  min: 1,\n                  max: -7462615,\n                  beginAtZero: true\n                }\n              }]\n            }\n          \n       \n       \n       }}\n\n     />\n\n)\n\n}\n\n}\n\nexport default Charty;\n\n","import React, { Component } from 'react'\nimport Table from 'react-bootstrap/Table'\n\n\nclass Chips extends Component{\n\n  render(){\n\n    if(this.props.data === null){\n      return null;\n    }\n    else {\n\n      return (\n      <div id=\"chips\">\n      <Table size=\"sm\" striped=\"true\">\n      <thead>\n      <tr>\n      <th>Chip</th>\n      <th>Week</th>\n      </tr>\n  </thead>\n  <tbody>\n        { this.props.data.map(e => {\n\n          return (\n            <tr key={e}>\n            <td> {`${e[1].toUpperCase()}`} </td> \n            <td>{`${e[0]}`}</td> \n            </tr>\n          )\n\n        }) }\n        </tbody>\n</Table>\n\n      </div>\n      \n      \n      \n  \n      )\n\n\n\n\n    }\n  }\n  \n}\n\nexport default Chips","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport Charty from './Charty'\nimport Chips from './Chips'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nasync function getData(id) {\n  \n\nlet proxy = 'https://cors-anywhere.herokuapp.com/'\nlet url = `https://fantasy.premierleague.com/api/entry/${id}/history/`\nlet response = await fetch(proxy+url)\nlet data = await response.json();\n\nreturn data\n}\n\n// getData(1709311).then(x => {\n\n//   console.log(x.current)\n\n// })\n\n\nclass Home extends Component {\nconstructor(props) {\n  super(props);\n  this.state= {\n\n    id: '',\n    current: [],\n    rank: [],\n    chips: [],\n   \n\n  }\n\n  \n}\n\nhandleChange(e) {\n  this.setState({\n\n    id: e.target.value\n  })\n}\n\nupdateStats(x) {\n\n  let weekArray = x.current.map(e => e.event)\n  let rankArray = x.current.map(e => e.overall_rank - e.overall_rank -e.overall_rank)\n  let chipArray = x.chips.map(e => { \n    \n    return [e.event, e.name]\n  \n  })\n  \n  \n  \n  \n  \n \n\n  this.setState({\n\n    \n\n    current: weekArray,\n    rank: rankArray,\n    chips: chipArray,\n    \n  })\n}\n\n  render() {\n    return (\n\n      <div>\n      <h1> FPL Rank</h1>\n      <input placeholder=\"Team ID\" value={this.state.id} onChange={(e) => this.handleChange(e)}/>\n      <button onClick= {() => getData(this.state.id)\n                              .then(x => {\n                                this.updateStats(x)\n                                \n\n                                \n                              }) \n      \n      \n      }>Submit</button>\n      <Charty data = {{\n            labels: this.state.current,\n            datasets: [{\n            label: 'Overall Rank',\n            borderColor: 'blue',\n            data: this.state.rank\n        }], }} />\n        <Chips data={ this.state.chips } />\n\n \n      </div>\n    )\n  }\n}\n\n\nReactDOM.render(<Home/>, document.getElementById('root'))"],"sourceRoot":""}